#+TITLE: anakondo

#+PROPERTY: LOGGING nil

# Note: This readme works with the org-make-toc <https://github.com/alphapapa/org-make-toc> package, which automatically updates the table of contents.

file:https://melpa.org/packages/package-name-badge.svg file:https://stable.melpa.org/packages/package-name-badge.svg

This is my package.  It is nice.  You should try it.

* Screenshots

This screenshot shows how to frobnicate the fripulator:

screenshot1.png

* Contents                                                         :noexport:
:PROPERTIES:
:TOC:      :include siblings
:END:
:CONTENTS:
  -  Installation
  -  Usage
  -  Changelog
  -  Credits
  -  Development
  -  License
:END:

* Installation
:PROPERTIES:
:TOC:      :depth 0
:END:

** MELPA

If you installed from MELPA, you're done.  Just run one of the commands below.

** Manual

  Install these required packages:

  + foo
  + bar

  Then put this file in your load-path, and put this in your init file:

  #+BEGIN_SRC elisp
(require 'package-name)
  #+END_SRC

* Usage
:PROPERTIES:
:TOC:      :depth 0
:END:

  Run one of these commands:

  + package-name-command: Frobnicate the flange.

** Tips

+ You can customize settings in the package-name group.


* Changelog
:PROPERTIES:
:TOC:      :depth 0
:END:

** 0.1

Additions
+ Added ~anakondo-minor-mode~ which lets you turn on/off clj-kondo driven auto-completion in your buffer
+ Clj-kondo auto-completion added to Emacs ~completion-at-point~
+ Contextual auto-completion, it only lists Vars which are required in current buffer
+ Auto-completes namespaces as well
+ If a required ns has an alias, only completes with alias to avoid accidentally forgetting to use alias
+ Properly handles Clojure, ClojureScript and cljc buffers with no associated file
+ Defaults to =user= namespace if there are no ~ns~ form in buffer

Internal
+ Clj-kondo analysis is now cached for better performance
+ Project level analysis done synchronously once on mode enter and cached for later use
+ Uses projectile to find the project root
+ Uses tools.deps to find the classpath for project root
+ On completion, re-analyses the current buffer and updates cache
+ Handles finding the symbol to complete even in complex forms like src_clojure{~sym}, src_clojure{~@sym}, src_clojure{@sym}, src_clojure{'sym}, src_clojure{`sym}

* Credits

This package would not have been possible without the following
packages: [[https://github.com/borkdude/clj-kondo][clj-kondo]], which does all the heavy lifting, [[https://github.com/bbatsov/projectile][projectile]],
which gives Emacs a common notion of projects, [[https://github.com/clojure/tools.deps.alpha][tools.deps]], which lets
me find the classpath effortlessly, and [[https://github.com/ryancrum/json.el][json]] which lets me parse
clj-kondo's analysis file inside Emacs.

* Development

Bug reports, feature requests, suggestions â€” oh my!

* License

MIT License, see accompanying [[https://github.com/didibus/anakondo/blob/master/LICENSE][LICENSE]] file.

# Local Variables:
# eval: (require 'org-make-toc)
# before-save-hook: org-make-toc
# org-export-with-properties: ()
# org-export-with-title: t
# End:
